# Auto-assign issues and PRs based on labels and content
name: Auto Assign

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, labeled]

jobs:
  auto-assign:
    runs-on: ubuntu-latest
    steps:
      - name: Auto-assign based on labels
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const issue = context.payload.issue || context.payload.pull_request;
            const labels = issue.labels.map(label => label.name);
            
            // Default assignee (you)
            const defaultAssignee = 'omsherikar';
            
            // Assignment rules based on labels
            let assignee = null;
            
            if (labels.includes('bug')) {
              assignee = defaultAssignee; // Bugs go to maintainer
            } else if (labels.includes('enhancement')) {
              assignee = defaultAssignee; // Features go to maintainer
            } else if (labels.includes('question')) {
              // Questions can be assigned to maintainer or left unassigned
              assignee = defaultAssignee;
            } else if (labels.includes('documentation')) {
              assignee = defaultAssignee; // Docs go to maintainer
            } else if (labels.includes('good-first-issue')) {
              // Good first issues can be left unassigned for new contributors
              assignee = null;
            } else if (labels.includes('help-wanted')) {
              // Help wanted issues can be left unassigned
              assignee = null;
            } else {
              // Default: assign to maintainer
              assignee = defaultAssignee;
            }
            
            // Only assign if we have an assignee and issue isn't already assigned
            if (assignee && issue.assignees.length === 0) {
              await github.rest.issues.addAssignees({
                owner,
                repo,
                issue_number: number,
                assignees: [assignee]
              });
              
              console.log(`Assigned ${assignee} to ${owner}/${repo}#${number}`);
            } else if (assignee && issue.assignees.length > 0) {
              console.log(`Issue ${owner}/${repo}#${number} already has assignees`);
            } else {
              console.log(`No assignment needed for ${owner}/${repo}#${number}`);
            }

  # Auto-assign based on file changes
  auto-assign-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Auto-assign PR based on changed files
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const pr = context.payload.pull_request;
            const files = context.payload.pull_request.files;
            
            // Default assignee
            const defaultAssignee = 'omsherikar';
            
            // Assignment rules based on changed files
            let assignee = null;
            
            // Check if any critical files were changed
            const criticalFiles = files.some(file => 
              file.filename.includes('refactron/') ||
              file.filename.includes('tests/') ||
              file.filename.includes('pyproject.toml') ||
              file.filename.includes('setup.py')
            );
            
            if (criticalFiles) {
              assignee = defaultAssignee; // Core changes go to maintainer
            } else if (files.some(file => file.filename.includes('docs/'))) {
              assignee = defaultAssignee; // Documentation changes
            } else if (files.some(file => file.filename.includes('.github/'))) {
              assignee = defaultAssignee; // GitHub configuration changes
            } else {
              assignee = defaultAssignee; // Default to maintainer
            }
            
            // Only assign if PR isn't already assigned
            if (assignee && pr.assignees.length === 0) {
              await github.rest.issues.addAssignees({
                owner,
                repo,
                issue_number: number,
                assignees: [assignee]
              });
              
              console.log(`Assigned ${assignee} to PR ${owner}/${repo}#${number}`);
            } else {
              console.log(`PR ${owner}/${repo}#${number} already has assignees or no assignment needed`);
            }
